#         axis.text.x = element_text(angle = 45, hjust = 1))
# p_prior_benefit_tax_road_fact_rate_lin
# ggsave(p_prior_benefit_tax_road_fact_rate_lin, filename = "Plots/p_prior_benefit_tax_road_fact_rate.pdf", height = 5, width = 10)
#
#
# x_lab <- "Tax: Road Transport"
# labs_legend <- c("0", "2.56")
# vals_legend <- c("red4", "darkgreen")
# legend_title <- "EV Chargin Stations"
# x_ticks <- c("No Tax", "0.14 Fr./l petrol", "0.28 Fr./l petrol", "0.42 Fr./l petrol", "0.56 Fr./l petrol")
# rg.nuis <- ref_grid(model1.2, non.nuisance = c("attrib2_lab", "ratio_ev_to_muni_area"), at = list(ratio_ev_to_muni_area = c(0, 2)))
# rg.nuis
# means_dat_fact_2 <- emmeans(rg.nuis, "attrib2_lab", by = "ratio_ev_to_muni_area", cov.keep = "attrib2_lab")
# p_EV_tax_road_fact_rate_lin <- means_dat_fact_2 %>%
#   as.data.frame(.) %>%
#   mutate(ratio_ev_to_muni_area = as.character(ratio_ev_to_muni_area),
#          # attrib2_lab = factor(attrib2_lab, levels = sort(unique(attrib2_lab)))
#   ) %>%
#   # filter(ratio_ev_to_muni_area %in% c(0, 2.0941933488961)) %>%
#   ggplot(., aes(x = attrib2_lab, y = emmean, group = ratio_ev_to_muni_area, col = ratio_ev_to_muni_area)) +
#   geom_line() +
#   geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL, col = ratio_ev_to_muni_area), width = .1, position = position_dodge(.1)) +
#   scale_x_discrete(labels = x_ticks) +
#   scale_color_manual(legend_title, values=vals_legend, labels = labs_legend) +
#   scale_fill_manual(legend_title, values=vals_legend, labels = labs_legend) +
#   guides(col = guide_legend(nrow = 2)) +
#   labs(
#     title = "Interaction of EV Charging Stations \nwith Carbon Tax on Road Transport",
#     x = x_lab,
#     y = "Support\n(Rate Outcome)"
#   ) +
#   theme_light() +
#   theme(legend.position = "bottom",
#         axis.text = element_text(size = 12),
#         axis.title = element_text(size = 12),
#         strip.text = element_text(size = 12),
#         legend.title = element_text(size=12),
#         legend.text = element_text(size=12),
#         axis.text.x = element_text(angle = 45, hjust = 1))
# p_EV_tax_road_fact_rate_lin
# ggsave(p_EV_tax_road_fact_rate_lin, filename = "Plots/p_EV_tax_road_fact_rate_lin.pdf", height = 5, width = 10)
#
# marginals_arranged <- ggarrange(p_prior_benefit_tax_road_fact_rate_lin, p_EV_tax_road_fact_rate_lin, nrow = 1, common.legend = FALSE)
# marginals_arranged
# ggsave(marginals_arranged, filename = "Plots/marginals_arranged.pdf", height = 5, width = 10)
##### interactions choice
model1.1 <- lm(choice ~
attrib1_lab*prior_benefit_2 + attrib2_lab*prior_benefit_2 +  attrib3_lab*prior_benefit_2 +  attrib4_lab*prior_benefit_2 + attrib5_lab*prior_benefit_2 + attrib6_lab*prior_benefit_2 +
+ prior_benefit_2 + driver + home_owner + age + educ + language + empl_sect + fin_cond + left_right  + sal_glob + sal_env + region + urban_rural
, data = reg_dat)
model1.2 <- lm(choice ~
attrib1_lab* sqrt(ratio_ev_to_muni_area) + attrib2_lab* sqrt(ratio_ev_to_muni_area) +  attrib3_lab* sqrt(ratio_ev_to_muni_area) +  attrib4_lab* sqrt(ratio_ev_to_muni_area) + attrib5_lab* sqrt(ratio_ev_to_muni_area) + attrib6_lab* sqrt(ratio_ev_to_muni_area) +
sqrt(ratio_ev_to_muni_area) + driver + home_owner + age + educ + language + empl_sect + fin_cond + left_right  + sal_glob + sal_env + region + urban_rural
, data = reg_dat)
model1.1_r <- coeftest(model1.1, cluster = reg_dat$id,  vcov = vcovHC(model1.1, type="HC1"))
model1.2_r <- coeftest(model1.2, cluster = reg_dat$id,  vcov = vcovHC(model1.2, type="HC1"))
texreg::texreg(list(model1.1_r, model1.2_r), digits = 3, stars = c(0.001, 0.01, 0.05, 0.1),
fontsize = "tiny", longtable = T, no.margin = T,
reorder.coef = c(1:5, 7:26, 6, 65, 27:41, 42:64, 66:89),
omit.coef = "region",
custom.coef.names = c("Intercept",
# Experimental
"50$\\%$", "60$\\%$", "70$\\%$", "80$\\%$", "Perceived Effectiveness of Prior Benefits",
"0.14 Fr./l petrol", "0.28 Fr./l petrol", "0.42 Fr./l petrol", "0.56 Fr./l petrol",
"0.16 Fr./l heating oil", "0.31 Fr./l heating oil", "0.47 Fr./l heating oil", "0.63 Fr./l heating oil",
"0.77 Fr./kg meat", "1.53 Fr./kg meat", "2.30 Fr./kg meat", "3.07 Fr./kg meat",
"10 Fr. for short- and 30 Fr. for long-distance", "25 Fr. for short- and 75 Fr. for long-distance", "40 Fr. for short- and 120 Fr. for long-distance", "55 Fr. for short- and 165 Fr. for long-distance",
"Mostly reimbursement", "Reimbursement und climate protection", "Mostly climate protection", "Exclusively climate protection",
# EVs
# CTRLs
"Driver", "Home Owner", "Age", "Education", "French", "Primary Employment Sector", "Secondary Employment Sector", "Tertiary Employment Sector", "Financial Condition", "Left-Right",
"Salience: Globalisation", "Salience: Environment and Climate",
"Intermediate Area", "Rural Area",
# 1
"50\\%$\\times$ Perceived Effectiveness of Prior Benefits", "60\\%$\\times$ Perceived Effectiveness of Prior Benefits", "70\\%$\\times$ Perceived Effectiveness of Prior Benefits", "80\\%$\\times$ Perceived Effectiveness of Prior Benefits",
"0.14 Fr./l petrol$\\times$ Perceived Effectiveness of Prior Benefits", "0.28 Fr./l petrol$\\times$ Perceived Effectiveness of Prior Benefits", "0.42 Fr./l petrol$\\times$ Perceived Effectiveness of Prior Benefits", "0.56 Fr./l petrol$\\times$ Perceived Effectiveness of Prior Benefits",
"0.16 Fr./l heating oil$\\times$ Perceived Effectiveness of Prior Benefits", "0.31 Fr./l heating oil$\\times$ Perceived Effectiveness of Prior Benefits", "0.47 Fr./l heating oil$\\times$ Perceived Effectiveness of Prior Benefits", "0.63 Fr./l heating oil$\\times$ Perceived Effectiveness of Prior Benefits",
"0.77 Fr./kg meat$\\times$ Perceived Effectiveness of Prior Benefits", "1.53 Fr./kg meat$\\times$ Perceived Effectiveness of Prior Benefits", "2.30 Fr./kg meat$\\times$ Perceived Effectiveness of Prior Benefits", "3.07 Fr./kg meat$\\times$ Perceived Effectiveness of Prior Benefits",
"10 Fr. for short- and 30 Fr. for long-distance$\\times$ Perceived Effectiveness of Prior Benefits", "25 Fr. for short- and 75 Fr. for long-distance$\\times$ Perceived Effectiveness of Prior Benefits", "40 Fr. for short- and 120 Fr. for long-distance$\\times$ Prior Benefit", "55 Fr. for short- and 165 Fr. for long-distance$\\times$ Prior Benefit",
"Mostly reimbursement$\\times$ Perceived Effectiveness of Prior Benefits", "Reimbursement and climate protection$\\times$ Perceived Effectiveness of Prior Benefits", "Mostly climate protection$\\times$ Perceived Effectiveness of Prior Benefits", "Exclusively climate protection$\\times$ Perceived Effectiveness of Prior Benefits",
"EV Charging Stations",
# 2
"50\\% $\\times$ EV Stations", "60\\% $\\times$ EV Stations", "70\\% $\\times$ EV Stations", "80\\% $\\times$ EV Stations",
"0.14 Fr./l petrol $\\times$ EV Stations", "0.28 Fr./l petrol $\\times$ EV Stations", "0.42 Fr./l petrol $\\times$ EV Stations", "0.56 Fr./l petrol $\\times$ EV Stations",
"0.16 Fr./l heating oil $\\times$ EV Stations", "0.31 Fr./l heating oil $\\times$ EV Stations", "0.47 Fr./l heating oil $\\times$ EV Stations", "0.63 Fr./l heating oil $\\times$ EV Stations",
"0.77 Fr./kg meat $\\times$ EV Stations", "1.53 Fr./kg meat $\\times$ EV Stations", "2.30 Fr./kg meat $\\times$ EV Stations", "3.07 Fr./kg meat $\\times$ EV Stations",
"10 Fr. for short- and 30 Fr. for long-distance $\\times$ EV Stations", "25 Fr. for short- and 75 Fr. for long-distance $\\times$ EV Stations", "40 Fr. for short- and 120 Fr. for long-distance$\\times$ EV Stations", "55 Fr. for short- and 165 Fr. for long-distance$\\times$ EV Stations",
"Mostly reimbursement $\\times$ EV Stations", "Reimbursement and climate protection $\\times$ EV Stations", "Mostly climate protection $\\times$ EV Stations", "Exclusively climate protection $\\times$ EV Stations"
),
custom.gof.rows = list("Region" = c("Yes", "Yes"),
"Observations" = lapply(list(model1.1, model1.2), nobs),
"R^2" = unlist(sapply(lapply(list(model1.1, model1.2), summary), "[", 8)),
"Adj. R^2" = unlist(sapply(lapply(list(model1.1, model1.2), summary), "[", 9))),
groups = list("Experimental: Reduction Target" = 2:5, "Experimental: Tax Road Transport" = 6:9, "Experimental: Tax Housing" = 10:13,
"Experimental: Tax Food" = 14:17, "Experimental: Tax Aviation Transport" = 18:21, "Experimental: Revenue Use" = 22:25,
"Explanatory Variables" = 26:27, "Controls" = 28:41,
"Interactions: Prior Benefit and Experimental Variables" = 42:65, "Interactions: EV Stations and Experimental Variables" = 66:89),
include.deviance = F,
label = "table:linear_interactions_exp_factor_choice",
file = "Tables/linear_interactions_exp_factor_choice.tex",
use.packages = F,
caption = "Ordinary least squares model with interaction effects using the choice outcome. Conjoint attributes are operationalised as ordered factor levels.  Normalisation: continuous variables are normalised by two times
the standard error to make them comparable to the estimates of binary variables following Gelman (2007). Standard errors are cluster robust by respondent id.")
#----------------------------------------------------#
# operationalisation: expvars as continuous
#----------------------------------------------------#
reg_dat <- dat %>%
dplyr::select(outcomes, expvars, covars, id) %>%
mutate_at(vars(covars), as.character) %>%
mutate_at(vars(outcomes, covars, expvars), as.numeric) %>%
mutate(educ = ifelse(is.na(educ), median(educ, na.rm = T), educ),
left_right = ifelse(is.na(left_right), median(left_right, na.rm = T), left_right),
age = ifelse(is.na(age), median(age, na.rm = T), age),
urban_rural = ifelse(is.na(urban_rural), median(urban_rural, na.rm = T), urban_rural),
ratio_ev_to_muni_area = ifelse(is.na(ratio_ev_to_muni_area), median(ratio_ev_to_muni_area, na.rm = T), ratio_ev_to_muni_area),
region = ifelse(is.na(region), median(region, na.rm = T), region),
) %>%
mutate_at(vars(empl_sect, urban_rural, region), as.factor)
reg_dat[c(vars_to_transform, expvars)] <- lapply(reg_dat[c(vars_to_transform, expvars)], sdFunc)
## (3) linear regression
library(sandwich)
model1.1 <- lm(rate ~ attrib1_lab + attrib2_lab +  attrib3_lab +  attrib4_lab + attrib5_lab + attrib6_lab, data = reg_dat)
model1.2 <- lm(rate ~ attrib1_lab + attrib2_lab +  attrib3_lab +  attrib4_lab + attrib5_lab + attrib6_lab +
+ prior_benefit_2, data = reg_dat)
model1.3 <- lm(rate ~ attrib1_lab + attrib2_lab +  attrib3_lab +  attrib4_lab + attrib5_lab + attrib6_lab +
sqrt(ratio_ev_to_muni_area), data = reg_dat)
model1.4 <- lm(rate ~ attrib1_lab + attrib2_lab +  attrib3_lab +  attrib4_lab + attrib5_lab + attrib6_lab +
+ prior_benefit_2 + driver + home_owner + age + educ + language + empl_sect + fin_cond + left_right  + sal_glob + sal_env + region
+ urban_rural, data = reg_dat)
model1.5 <- lm(rate ~ attrib1_lab + attrib2_lab +  attrib3_lab +  attrib4_lab + attrib5_lab + attrib6_lab +
sqrt(ratio_ev_to_muni_area) + driver + home_owner + age + educ + language + empl_sect + fin_cond + left_right + sal_glob + sal_env + region
+ urban_rural , data = reg_dat)
model1.1_r <- coeftest(model1.1, cluster = reg_dat$id,  vcov = vcovHC(model1.1, type="HC1"))
model1.2_r <- coeftest(model1.2, cluster = reg_dat$id,  vcov = vcovHC(model1.2, type="HC1"))
model1.3_r <- coeftest(model1.3, cluster = reg_dat$id,  vcov = vcovHC(model1.3, type="HC1"))
model1.4_r <- coeftest(model1.4, cluster = reg_dat$id,  vcov = vcovHC(model1.4, type="HC1"))
model1.5_r <- coeftest(model1.5, cluster = reg_dat$id,  vcov = vcovHC(model1.5, type="HC1"))
texreg::texreg(list(model1.1_r, model1.2_r, model1.3_r, model1.4_r, model1.5_r), digits = 3, stars = c(0.001, 0.01, 0.05, 0.1),
fontsize = "tiny", longtable = T, no.margin = T,
omit.coef = "region",
custom.coef.names = c("Intercept", "Reduction Target", "Tax Road Transport", "Tax Housing", "Tax Food", "Tax Aviation Transport", "Revenue Use",
# EVs
"Perceived Effectiveness of Prior Benefits", "EV Charging Stations",
# CTRLs
"Driver", "Home Owner", "Age", "Education", "French", "Primary Employment Sector", "Secondary Employment Sector", "Tertiary Employment Sector", "Financial Condition", "Left-Right",
"Salience: Globalisation", "Salience: Environment and Climate",
"Intermediate Area", "Rural Area"
),
groups = list("Experimental" = 2:7, "Explanatory Variables" = 8:9, "Controls" = 10:23),
custom.gof.rows = list("Region Controls" = c("No", "No", "No", "Yes", "Yes"),
"Observations" = lapply(list(model1.1, model1.2, model1.3, model1.4, model1.5), nobs),
"R^2" = unlist(sapply(lapply(list(model1.1, model1.2, model1.3, model1.4, model1.5), summary), "[", 8)),
"Adj. R^2" = unlist(sapply(lapply(list(model1.1, model1.2, model1.3, model1.4, model1.5), summary), "[", 9))),
include.deviance = F,
label = "table:linear_direct_exp_continuous",
file = "Tables/linear_direct_exp_continuous.tex",
use.packages = F,
caption = "Ordinary least squares model with direct effects using the rate outcome. Conjoint attributes are operationalised as continuous variables. Normalisation: continuous variables are normalised by two times
the standard error to make them comparable to the estimates of binary variables following Gelman (2007). Standard errors are cluster robust by respondent id.")
##### interactions rate
model1.1 <- lm(rate ~
attrib1_lab*prior_benefit_2 + attrib2_lab*prior_benefit_2 +  attrib3_lab*prior_benefit_2 +  attrib4_lab*prior_benefit_2 + attrib5_lab*prior_benefit_2 + attrib6_lab*prior_benefit_2 +
+ prior_benefit_2 + driver + home_owner + age + educ + language  + empl_sect + fin_cond + left_right + sal_glob + sal_env + urban_rural
, data = reg_dat)
model1.2 <- lm(rate ~
attrib1_lab*sqrt(ratio_ev_to_muni_area) + attrib2_lab*sqrt(ratio_ev_to_muni_area) +  attrib3_lab*sqrt(ratio_ev_to_muni_area) +  attrib4_lab*sqrt(ratio_ev_to_muni_area) + attrib5_lab*sqrt(ratio_ev_to_muni_area) + attrib6_lab*sqrt(ratio_ev_to_muni_area) +
sqrt(ratio_ev_to_muni_area) + driver + home_owner + age + educ + language + empl_sect + fin_cond + left_right + sal_glob + sal_env + urban_rural
, data = reg_dat)
model1.1_r <- coeftest(model1.1, cluster = reg_dat$id,  vcov = vcovHC(model1.1, type="HC1"))
model1.2_r <- coeftest(model1.2, cluster = reg_dat$id,  vcov = vcovHC(model1.2, type="HC1"))
texreg::texreg(list(model1.1_r, model1.2_r), digits = 3, stars = c(0.001, 0.01, 0.05, 0.1),
fontsize = "tiny", longtable = T, no.margin = T,
reorder.coef = c(1:2, 4:8, 3, 29, 9:19, 20:28, 30:35),
omit.coef = "region",
custom.coef.names = c("Intercept", "Perceived Effectiveness of Prior Benefits", "Reduction Target", "Tax Road Transport", "Tax Housing", "Tax Food", "Tax Aviation Transport", "Revenue Use",
# CTRLs
"Driver", "Home Owner", "Age", "Education", "French", "Primary Employment Sector", "Secondary Employment Sector", "Tertiary Employment Sector", "Financial Condition", "Left-Right",
"Salience: Globalisation", "Salience: Environment and Climate",
"Intermediate Area", "Rural Area",
# "Preference: Regulatory Instruments", "Preference: Voluntary Instruments", "Preference: Subsidies", "Preference: Technical Solutions",
# "Belief: Effectiveness", "Belief: Efficiency", "Belief: Competitiveness", "Belief: Justice", "Belief: Transformation"
# Interactions
"Reduction Target$\\times$ Perceived Effectiveness of Prior Benefits", "Road Transport$\\times$ Perceived Effectiveness of Prior Benefits", "Housing$\\times$ Perceived Effectiveness of Prior Benefits", "Food$\\times$ Perceived Effectiveness of Prior Benefits", "Aviation Transport$\\times$ Perceived Effectiveness of Prior Benefits", "Revenue Use$\\times$ Perceived Effectiveness of Prior Benefits",
"EV Charging Stations", "Reduction Target $\\times$ EV Charging Stations", "Road Transport $\\times$ EV Charging Stations", "Housing $\\times$ EV Charging Stations", "Food $\\times$ EV Charging Stations", "Aviation Transport $\\times$ EV Charging Stations", "Revenue Use $\\times$ EV Charging Stations"
),
groups = list("Experimental" = 2:7, "Explanatory Variables" = 8:9, "Controls" = 10:23,
"Prior Benefit and Experimental" = 24:29, "EV Stations and Experimental" = 30:35
),
custom.gof.rows = list("Region Controls" = c("Yes", "Yes"),
"Observations" = lapply(list(model1.1, model1.2), nobs),
"R^2" = unlist(sapply(lapply(list(model1.1, model1.2), summary), "[", 8)),
"Adj. R^2" = unlist(sapply(lapply(list(model1.1, model1.2), summary), "[", 9))),
include.deviance = F,
label = "table:linear_interactions_exp_continuous",
file = "Tables/linear_interactions_exp_continuous.tex",
use.packages = F,
caption = "Ordinary least squares model with interaction effects using the rate outcome. Conjoint attributes are operationalised as continuous variables. Normalisation: continuous variables are normalised by two times
the standard error to make them comparable to the estimates of binary variables following Gelman (2007). Standard errors are cluster robust by respondent id.")
x_lab <- "Tax: Road Transport"
labs_legend <- c("no influence at all", "some influence")
vals_legend <- c("red4", "darkgreen")
legend_title <- "Perceived Effectiveness of Prior Benefits"
x_ticks <- c("No Tax", "0.14 Fr./l petrol", "0.28 Fr./l petrol", "0.42 Fr./l petrol", "0.56 Fr./l petrol")
rg.nuis <- ref_grid(model1.1, non.nuisance = c("attrib2_lab", "prior_benefit_2"), cov.keep = c("prior_benefit_2", "attrib2_lab"), at = list(prior_benefit_2 = c(0.38403, 1.53611)))
rg.nuis
means_dat_fact_1 <- emmeans(rg.nuis, "attrib2_lab", by = "prior_benefit_2", cov.keep = c("attrib2_lab"))
p_prior_benefit_tax_road_fact_rate_lin <- means_dat_fact_1 %>%
as.data.frame(.) %>%
# filter(prior_benefit_2 %in% c(head(prior_benefit_2, n = 1), tail(prior_benefit_2, n = 1))) %>%
mutate(prior_benefit_2 = as.character(prior_benefit_2),
attrib2_lab = factor(attrib2_lab, levels = sort(unique(attrib2_lab)))) %>%
ggplot(., aes(x = attrib2_lab, y = emmean, group = prior_benefit_2, col = prior_benefit_2)) +
geom_line() +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL, col = prior_benefit_2), width = .1, position = position_dodge(.1)) +
scale_x_discrete(labels = x_ticks) +
scale_color_manual(legend_title, values=vals_legend, labels = labs_legend) +
scale_fill_manual(legend_title, values=vals_legend, labels = labs_legend) +
guides(col = guide_legend(nrow = 2)) +
labs(
title = "Perceived Effectiveness of Prior Benefits",
x = x_lab,
y = "Support\n(Rate Outcome)"
) +
theme_light() +
theme(legend.position = "bottom",
legend.direction = "vertical",
axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12),
legend.title = element_text(size=12),
legend.text = element_text(size=12),
axis.text.x = element_text(angle = 45, hjust = 1))
p_prior_benefit_tax_road_fact_rate_lin
ggsave(p_prior_benefit_tax_road_fact_rate_lin, filename = "Plots/p_prior_benefit_tax_road_fact_rate.pdf", height = 5, width = 10)
x_lab <- "Tax: Road Transport"
labs_legend <- c("0", "2")
vals_legend <- c("red4", "darkgreen")
legend_title <- "EV Chargin Stations"
x_ticks <- c("No Tax", "0.14 Fr./l petrol", "0.28 Fr./l petrol", "0.42 Fr./l petrol", "0.56 Fr./l petrol")
rg.nuis <- ref_grid(model1.2, non.nuisance = c("attrib2_lab", "ratio_ev_to_muni_area"), cov.keep = c("attrib2_lab", "ratio_ev_to_muni_area"))
rg.nuis
means_dat_fact_2 <- emmeans(rg.nuis, "attrib2_lab", by = "ratio_ev_to_muni_area", cov.keep = c("attrib2_lab", "ratio_ev_to_muni_area"))
p_EV_tax_road_fact_rate_lin <- means_dat_fact_2 %>%
as.data.frame(.) %>%
mutate(ratio_ev_to_muni_area = as.character(ratio_ev_to_muni_area),
attrib2_lab = factor(attrib2_lab, levels = sort(unique(attrib2_lab)))
) %>%
filter(ratio_ev_to_muni_area %in% c(0, 2.59302745808627)) %>%
ggplot(., aes(x = attrib2_lab, y = emmean, group = ratio_ev_to_muni_area, col = ratio_ev_to_muni_area)) +
geom_line() +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL, col = ratio_ev_to_muni_area), width = .1, position = position_dodge(.1)) +
scale_x_discrete(labels = x_ticks) +
scale_color_manual(legend_title, values=vals_legend, labels = labs_legend) +
scale_fill_manual(legend_title, values=vals_legend, labels = labs_legend) +
guides(col = guide_legend(nrow = 2)) +
labs(
title = "EV Charging Stations",
x = x_lab,
y = "Support\n(Rate Outcome)"
) +
theme_light() +
theme(legend.position = "bottom",
legend.direction = "vertical",
axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12),
legend.title = element_text(size=12),
legend.text = element_text(size=12),
axis.text.x = element_text(angle = 45, hjust = 1))
p_EV_tax_road_fact_rate_lin
ggsave(p_EV_tax_road_fact_rate_lin, filename = "Plots/p_EV_tax_road_fact_rate_lin.pdf", height = 5, width = 10)
##### interactions choice
model1.1 <- lm(choice ~
attrib1_lab*prior_benefit_2 + attrib2_lab*prior_benefit_2 +  attrib3_lab*prior_benefit_2 +  attrib4_lab*prior_benefit_2 + attrib5_lab*prior_benefit_2 + attrib6_lab*prior_benefit_2 +
+ prior_benefit_2 + driver + home_owner + age + educ + language  + empl_sect + fin_cond + left_right + sal_glob + sal_env + urban_rural
, data = reg_dat)
model1.2 <- lm(choice ~
attrib1_lab* sqrt(ratio_ev_to_muni_area) + attrib2_lab* sqrt(ratio_ev_to_muni_area) +  attrib3_lab* sqrt(ratio_ev_to_muni_area) +  attrib4_lab* sqrt(ratio_ev_to_muni_area) + attrib5_lab* sqrt(ratio_ev_to_muni_area) + attrib6_lab* sqrt(ratio_ev_to_muni_area) +
sqrt(ratio_ev_to_muni_area) + driver + home_owner + age + educ + language + empl_sect + fin_cond + left_right + sal_glob + sal_env + urban_rural
, data = reg_dat)
model1.1_r <- coeftest(model1.1, cluster = reg_dat$id,  vcov = vcovHC(model1.1, type="HC1"))
model1.2_r <- coeftest(model1.2, cluster = reg_dat$id,  vcov = vcovHC(model1.2, type="HC1"))
texreg::texreg(list(model1.1_r, model1.2_r), digits = 3, stars = c(0.001, 0.01, 0.05, 0.1),
fontsize = "tiny", longtable = T, no.margin = T,
reorder.coef = c(1:2, 4:8, 3, 29, 9:19, 20:28, 30:35),
omit.coef = "region",
custom.coef.names = c("Intercept", "Perceived Effectiveness of Prior Benefits", "Reduction Target", "Tax Road Transport", "Tax Housing", "Tax Food", "Tax Aviation Transport", "Revenue Use",
# CTRLs
"Driver", "Home Owner", "Age", "Education", "French", "Primary Employment Sector", "Secondary Employment Sector", "Tertiary Employment Sector", "Financial Condition", "Left-Right",
"Salience: Globalisation", "Salience: Environment and Climate",
"Intermediate Area", "Rural Area",
# "Preference: Regulatory Instruments", "Preference: Voluntary Instruments", "Preference: Subsidies", "Preference: Technical Solutions",
# "Belief: Effectiveness", "Belief: Efficiency", "Belief: Competitiveness", "Belief: Justice", "Belief: Transformation"
# Interactions
"Reduction Target$\\times$ Perceived Effectiveness of Prior Benefits", "Road Transport$\\times$ Perceived Effectiveness of Prior Benefits", "Housing$\\times$ Perceived Effectiveness of Prior Benefits", "Food$\\times$ Perceived Effectiveness of Prior Benefits", "Aviation Transport$\\times$ Perceived Effectiveness of Prior Benefits", "Revenue Use$\\times$ Perceived Effectiveness of Prior Benefits",
"EV Charging Stations", "Reduction Target $\\times$ EV Charging Stations", "Road Transport $\\times$ EV Charging Stations", "Housing $\\times$ EV Charging Stations", "Food $\\times$ EV Charging Stations", "Aviation Transport $\\times$ EV Charging Stations", "Revenue Use $\\times$ EV Charging Stations"
),
groups = list("Experimental" = 2:7, "Explanatory Variables" = 8:9, "Controls" = 10:23,
"Prior Benefit and Experimental" = 24:29, "EV Stations and Experimental" = 30:35
),
custom.gof.rows = list("Region Controls" = c("Yes", "Yes"),
"Observations" = lapply(list(model1.1, model1.2), nobs),
"R^2" = unlist(sapply(lapply(list(model1.1, model1.2), summary), "[", 8)),
"Adj. R^2" = unlist(sapply(lapply(list(model1.1, model1.2), summary), "[", 9))),
include.deviance = F,
label = "table:linear_interactions_exp_continuous_choice",
file = "Tables/linear_interactions_exp_continuous_choice.tex",
use.packages = F,
caption = "Ordinary least squares model with interaction effects using the choice outcome. Conjoint attributes are operationalised as continuous variables. Normalisation: continuous variables are normalised by two times
the standard error to make them comparable to the estimates of binary variables following Gelman (2007). Standard errors are cluster robust by respondent id.")
model1.1 <- lm(rate ~ attrib1_lab + attrib2_lab +  attrib3_lab +  attrib4_lab + attrib5_lab + attrib6_lab +
+ driver + home_owner + age + educ + language + empl_sect + fin_cond + left_right*prior_benefit_2 + sal_env*prior_benefit_2  + sal_glob + sal_env + region
+ urban_rural
, data = reg_dat)
model1.2 <- lm(rate ~ attrib1_lab + attrib2_lab +  attrib3_lab +  attrib4_lab + attrib5_lab + attrib6_lab +
+ driver + home_owner + age + educ + language + empl_sect + fin_cond + left_right*ratio_ev_to_muni_area + sal_env*ratio_ev_to_muni_area  + sal_glob + sal_env + region
+ urban_rural
, data = reg_dat)
texreg::texreg(list(model1.1, model1.2), digits = 3, stars = c(0.001, 0.01, 0.05, 0.1),
fontsize = "tiny", longtable = T, no.margin = T,
reorder.coef = c(1:8, 25, 9:24, 26:27),
omit.coef = "region",
custom.coef.names = c("Intercept", "Reduction Target", "Tax Road Transport", "Tax Housing", "Tax Food", "Tax Aviation Transport", "Revenue Use",
"Perceived Effectiveness of Prior Benefits",
# CTRLs
"Driver", "Home Owner", "Age", "Education", "French", "Primary Employment Sector", "Secondary Employment Sector", "Tertiary Employment Sector", "Financial Condition", "Left-Right",
"Salience: Globalisation", "Salience: Environment and Climate",
"Intermediate Area", "Rural Area",
# Interactions
"Perceived Effectiveness of Prior Benefits $\\times$ Left-Right", "Perceived Effectiveness of Prior Benefits $\\times$ Salience: Environment and Climate",
"EV Charging Stations",
"EV Charging Stations $\\times$ Left-Right", "EV Charging Stations $\\times$ Salience: Environment and Climate"
),
groups = list("Experimental" = 2:7, "Explanatory Variables" = 8:9, "Controls" = 10:23,
"Prior Benefit Interactions" = 24:25, "EV Charging Stations Interactions" = 26:27
),
custom.gof.rows = list("Region Controls" = c("Yes", "Yes"),
"Observations" = lapply(list(model1.1, model1.2), nobs),
"R^2" = sapply(lapply(list(model1.1, model1.2), summ), attr, "rsq"),
"Adj. R^2" = sapply(lapply(list(model1.1, model1.2), summ), attr, "arsq")
),
include.deviance = F,
label = "table:linear_interactions_benefit_EV_left_right_sal",
file = "Tables/linear_interactions_benefit_EV_left_right_sal.tex",
use.packages = F,
caption = "Ordinary least squares model with interaction effects using the choice outcome. Conjoint attributes are operationalised as continuous variables. Normalisation: continuous variables are normalised by two times
the standard error to make them comparable to the estimates of binary variables following Gelman (2007)"
)
clean <- dat %>%
dplyr::select(outcomes, covars, expvars, id, choice_id, round) %>%
mutate_all(as.numeric) %>%
mutate(ratio_ev_to_muni_area = sqrt(ifelse(is.na(ratio_ev_to_muni_area), median(ratio_ev_to_muni_area, na.rm = T), ratio_ev_to_muni_area)),
educ = ifelse(is.na(educ), median(educ, na.rm = T), educ),
left_right = ifelse(is.na(left_right), median(left_right, na.rm = T), left_right),
age = ifelse(is.na(age), median(age, na.rm = T), age),
urban_rural = ifelse(is.na(urban_rural), median(urban_rural, na.rm = T), urban_rural),
region = ifelse(is.na(region), median(region, na.rm = T), region)
) %>%
drop_na() %>%
mutate(
Geneva = ifelse(region == 1, 1, 0),
Middle_Land = ifelse(region == 2, 1, 0),
North_West = ifelse(region == 3, 1, 0),
Zurich = ifelse(region == 4, 1, 0),
East = ifelse(region == 5, 1, 0),
Central = ifelse(region == 6, 1, 0),
Ticino = ifelse(region == 7, 1, 0),
urban = ifelse(urban_rural == 1, 1, 0),
intermediary = ifelse(urban_rural == 2, 1, 0),
rural = ifelse(urban_rural == 3, 1, 0)) %>%
mutate(attrib1_lab = ifelse(attrib1_lab == "40%", "Control", attrib1_lab),
attrib2_lab = ifelse(attrib2_lab == "Keine Abgabe auf Benzin", "Control", attrib2_lab),
attrib3_lab = ifelse(attrib3_lab == "Keine Abgabe auf Heizöl", "Control", attrib3_lab),
attrib4_lab = ifelse(attrib4_lab == "Keine Abgabe auf Fleisch", "Control", attrib4_lab),
attrib5_lab = ifelse(attrib5_lab == "Keine Abgabe", "Control", attrib5_lab),
attrib6_lab = ifelse(attrib6_lab == "Pauschale Rückerstattung und Klimaschutzförderbeiträge", "Control", attrib6_lab))
treat <- clean %>%
as_tibble() %>%
dplyr::select(starts_with("attrib") & ends_with("lab"))
pre_treat_1 <- clean %>%
dplyr::select(
prior_benefit_2,
ratio_ev_to_muni_area,
driver, home_owner, age, educ, language, empl_sect, fin_cond,
left_right,
Geneva, Middle_Land, North_West, Zurich, East, Central, Ticino,
sal_glob, sal_env,
urban, rural, intermediary
) %>%
remove_rownames() %>%
as.matrix()
clean[vars_to_transform] <- lapply(clean[vars_to_transform], sdFunc)
out <- sparsereg::sparsereg(y = clean$choice,
X = pre_treat_1,
treat = treat,
id = clean$id,
id2 = clean$choice_id,
id3 = clean$round,
scale.type = "TX",
baseline.vec = "Control",
conservative = F,
gibbs = 50, burnin = 50)
summary(out)
sparsereg_res <- print(out)$statistics
r_names_spreg <- rownames(sparsereg_res)
sparsereg_res_clean <- sparsereg_res %>%
as_tibble() %>%
dplyr::mutate(variables = gsub(": ", "_", r_names_spreg),
attribute = NA,
attribute = ifelse(grepl("attrib1_lab", variables), "Reduction Target", attribute),
attribute = ifelse(grepl("attrib2_lab", variables), "Road Transport", attribute),
attribute = ifelse(grepl("attrib3_lab", variables), "Housing", attribute),
attribute = ifelse(grepl("attrib4_lab", variables), "Food", attribute),
attribute = ifelse(grepl("attrib5_lab", variables), "Aviation Transport", attribute),
attribute = ifelse(grepl("attrib6_lab", variables), "Revenue Use", attribute),
attribute = factor(attribute, levels = c("Reduction Target", "Road Transport", "Housing", "Food", "Aviation Transport", "Revenue Use")),
cjoin_level = NA,
cjoin_level = ifelse(grepl("attrib1_lab_1", variables), "40%", cjoin_level),
cjoin_level = ifelse(grepl("attrib1_lab_2", variables), "50%", cjoin_level),
cjoin_level = ifelse(grepl("attrib1_lab_3", variables), "60%", cjoin_level),
cjoin_level = ifelse(grepl("attrib1_lab_4", variables), "70%", cjoin_level),
cjoin_level = ifelse(grepl("attrib1_lab_5", variables), "80%", cjoin_level),
cjoin_level = ifelse(grepl("attrib2_lab_1", variables), "No tax on petrol", cjoin_level),
cjoin_level = ifelse(grepl("attrib2_lab_2", variables), "0.14 Fr./l petrol", cjoin_level),
cjoin_level = ifelse(grepl("attrib2_lab_3", variables), "0.28 Fr./l petrol", cjoin_level),
cjoin_level = ifelse(grepl("attrib2_lab_4", variables), "0.42 Fr./l petrol", cjoin_level),
cjoin_level = ifelse(grepl("attrib2_lab_5", variables), "0.56 Fr./l petrol", cjoin_level),
cjoin_level = ifelse(grepl("attrib3_lab_1", variables), "No tax on heating oil", cjoin_level),
cjoin_level = ifelse(grepl("attrib3_lab_2", variables), "0.16 Fr./l heating oil", cjoin_level),
cjoin_level = ifelse(grepl("attrib3_lab_3", variables), "0.31 Fr./l heating oil", cjoin_level),
cjoin_level = ifelse(grepl("attrib3_lab_4", variables), "0.47 Fr./l heating oil", cjoin_level),
cjoin_level = ifelse(grepl("attrib3_lab_5", variables), "0.63 Fr./l heating oil", cjoin_level),
cjoin_level = ifelse(grepl("attrib4_lab_1", variables), "No tax on meat", cjoin_level),
cjoin_level = ifelse(grepl("attrib4_lab_2", variables), "0.77 Fr./kg meat", cjoin_level),
cjoin_level = ifelse(grepl("attrib4_lab_3", variables), "1.53 Fr./kg meat", cjoin_level),
cjoin_level = ifelse(grepl("attrib4_lab_4", variables), "2.30 Fr./kg meat", cjoin_level),
cjoin_level = ifelse(grepl("attrib4_lab_5", variables), "3.07 Fr./kg meat", cjoin_level),
cjoin_level = ifelse(grepl("attrib5_lab_1", variables), "No tax on private flights", cjoin_level),
cjoin_level = ifelse(grepl("attrib5_lab_2", variables), "10 Fr. for short- and 30 Fr. for long-distance", cjoin_level),
cjoin_level = ifelse(grepl("attrib5_lab_3", variables), "25 Fr. for short- and 75 Fr. for long-distance", cjoin_level),
cjoin_level = ifelse(grepl("attrib5_lab_4", variables), "40 Fr. for short- and 120 Fr. for long-distance", cjoin_level),
cjoin_level = ifelse(grepl("attrib5_lab_5", variables), "55 Fr. for short- and 165 Fr. for long-distance", cjoin_level),
cjoin_level = ifelse(grepl("attrib6_lab_1", variables), "Exclusively climate protection", cjoin_level),
cjoin_level = ifelse(grepl("attrib6_lab_2", variables), "Mostly reimbursement", cjoin_level),
cjoin_level = ifelse(grepl("attrib6_lab_3", variables), "Reimbursement and climate protection", cjoin_level),
cjoin_level = ifelse(grepl("attrib6_lab_4", variables), "Mostly climate protection", cjoin_level),
cjoin_level = ifelse(grepl("attrib6_lab_5", variables), "Exclusively reimbursement", cjoin_level),
cjoin_level = factor(cjoin_level, levels = c(
"40%", "50%", "60%", "70%", "80%",
"No tax on petrol", "0.14 Fr./l petrol", "0.28 Fr./l petrol", "0.42 Fr./l petrol", "0.56 Fr./l petrol",
"No tax on heating oil", "0.16 Fr./l heating oil", "0.31 Fr./l heating oil", "0.47 Fr./l heating oil", "0.63 Fr./l heating oil",
"No tax on meat", "0.77 Fr./kg meat", "1.53 Fr./kg meat", "2.30 Fr./kg meat", "3.07 Fr./kg meat",
"No tax on private flights", "10 Fr. for short- and 30 Fr. for long-distance", "25 Fr. for short- and 75 Fr. for long-distance", "40 Fr. for short- and 120 Fr. for long-distance", "55 Fr. for short- and 165 Fr. for long-distance",
"Exclusively reimbursement", "Mostly reimbursement", "Reimbursement and climate protection", "Mostly climate protection", "Exclusively climate protection")),
var_group = NA,
var_group = ifelse(grepl(("driver|home_owner|vege"), variables) & !grepl(("ren_driver"), variables), "Behavioural\n Controls", var_group),
var_group = ifelse(grepl(c("prior_benefit_2|ren_driver|renew_heating|switch|ratio_ev_to_muni_area|ratio_pt_to_muni_area"), variables), "Explanatory\n Variables", var_group),
var_group = ifelse(grepl(c("sal_glob|sal_env"), variables),  "Salience\n Controls", var_group),
var_group = ifelse(grepl(c("Geneva|Middle_Land|North_West|Zurich|East|Central|Ticino|urban|intermediary|rural"), variables), "Geographic\n Controls", var_group),
var_group = ifelse(grepl(c("age|educ|empl_sect|fin_cond|left_right|language"), variables), "Demographic\n Controls", var_group),
var_group = factor(var_group, levels = c("Explanatory\n Variables", "Behavioural\n Controls", "Demographic\n Controls", "Salience\n Controls", "Geographic\n Controls", "Belief\n Controls", "Preference\n Controls")),
covar = as.factor(NA),
covar = ifelse(grepl("prior_benefit_2 ",variables),"Perceived Effectiveness of Prior Benefits",covar),
covar = ifelse(grepl("driver ",variables) & !grepl("ren_driver ",variables),"Driver",covar),
covar = ifelse(grepl("ren_driver ",variables),"Renewable Driver",covar),
covar = ifelse(grepl("renew_heating ",variables),"Renewable Heater",covar),
covar = ifelse(grepl("ratio_ev_to_muni_area ",variables),"EV Charging Stations",covar),
covar = ifelse(grepl("home_owner ",variables),"Home Owner",covar),
covar = ifelse(grepl("age ",variables),"Age",covar),
covar = ifelse(grepl("educ ",variables),"Education",covar),
covar = ifelse(grepl("language ",variables),"French",covar),
covar = ifelse(grepl("empl_sect ",variables),"Primary Employment Sector",covar),
covar = ifelse(grepl("fin_cond ",variables),"Financial Condition",covar),
covar = ifelse(grepl("left_right ",variables),"Left-Right",covar),
covar = ifelse(grepl("sal_glob ",variables),"Salience: Globalisation",covar),
covar = ifelse(grepl("sal_env ",variables),"Salience: Environment and Climate",covar),
covar = ifelse(grepl("urban_rural2 ",variables),"Rural Area",covar),
covar = ifelse(grepl("urban_rural3 ",variables),"Intermediate Area",covar),
covar = ifelse(grepl("urban" ,variables),"Urban",covar),
covar = ifelse(grepl("intermediary ",variables),"Intermediary",covar),
covar = ifelse(grepl("rural ",variables),"Rural",covar),
covar = factor(covar, levels = c("Perceived Effectiveness of Prior Benefits",
"EV Charging Stations", "PT Stations", "Switch",
# CTRLs
"Driver", "Home Owner", "Vegetarian", "Age", "Education", "French", "Primary Employment Sector", "Secondary Employment Sector", "Tertiary Employment Sector", "Financial Condition", "Left-Right",
"Salience: Globalisation", "Salience: Environment and Climate",
"Intermediate Area",  "Rural Area",
"Geneva", "Middle Land", "North West", "Zurich", "East", "Central", "Ticino", "Urban", "Intermediary", "Rural"))
) %>%
dplyr::mutate(Mean = Mean/max(abs(Mean))) %>%
dplyr::filter(!is.na(attribute) & !is.na(covar) & !is.na(var_group)) %>%
dplyr::mutate(significant = ifelse((Mean-1.96*SD > 0 & Mean+1.96*SD > 0) | (Mean-1.96*SD < 0 & Mean+1.96*SD < 0), 1 ,0))
p_sparse_reg_heat_out <- sparsereg_res_clean %>%
ggplot2::ggplot(., ggplot2::aes_string(x = "covar",
y = "cjoin_level",
fill = "Mean")) +
ggplot2::facet_grid(attribute ~ var_group,
space = "free",
scales = "free",
# switch = "y"
) +
ggplot2::geom_tile() +
ggplot2::geom_tile(data = sparsereg_res_clean[sparsereg_res_clean$significant == 1 & sparsereg_res_clean$Mean > 0,], fill = NA, color = "darkgreen", size = 1) +
ggplot2::geom_tile(data = sparsereg_res_clean[sparsereg_res_clean$significant == 1 & sparsereg_res_clean$Mean < 0,], fill = NA, color = "darkred", size = 1) +
ggplot2::scale_fill_gradient2(high = "darkgreen", low = "darkred", limits = c(-1, 1), midpoint = 0, mid = "grey90") +
ggplot2::scale_y_discrete(limits = rev) +
ggplot2::labs(x = "", y = "", fill = "Mean") +
ggplot2::theme_classic() +
ggplot2::theme(axis.text.x = ggplot2::element_text(angle= 45, vjust = 1, hjust = 1),
strip.placement = "outside", legend.position = "bottom", text = element_text(size=14, colour = "black"),)
p_sparse_reg_heat_out
ggsave(p_sparse_reg_heat_out, file = "Plots/sparse_reg_heat.pdf", height = 15, width = 11)
